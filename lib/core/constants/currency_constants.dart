class CurrencyConstants {
  static const List<CurrencyModel> currencies = [
    CurrencyModel(code: 'TRY', name: 'T√ºrk Lirasƒ±', symbol: '‚Ç∫', flag: 'üáπüá∑'),
    CurrencyModel(code: 'USD', name: 'Amerikan Dolarƒ±', symbol: '\$', flag: 'üá∫üá∏'),
    CurrencyModel(code: 'EUR', name: 'Euro', symbol: '‚Ç¨', flag: 'üá™üá∫'),
    CurrencyModel(code: 'GBP', name: 'ƒ∞ngiliz Sterlini', symbol: '¬£', flag: 'üá¨üáß'),
    CurrencyModel(code: 'JPY', name: 'Japon Yeni', symbol: '¬•', flag: 'üáØüáµ'),
    CurrencyModel(code: 'CHF', name: 'ƒ∞svi√ßre Frangƒ±', symbol: 'CHF', flag: 'üá®üá≠'),
    CurrencyModel(code: 'CAD', name: 'Kanada Dolarƒ±', symbol: 'C\$', flag: 'üá®üá¶'),
    CurrencyModel(code: 'AUD', name: 'Avustralya Dolarƒ±', symbol: 'A\$', flag: 'üá¶üá∫'),
    CurrencyModel(code: 'CNY', name: '√áin Yuanƒ±', symbol: '¬•', flag: 'üá®üá≥'),
    CurrencyModel(code: 'KRW', name: 'G√ºney Kore Wonu', symbol: '‚Ç©', flag: 'üá∞üá∑'),
    CurrencyModel(code: 'RUB', name: 'Rus Rublesi', symbol: '‚ÇΩ', flag: 'üá∑üá∫'),
    CurrencyModel(code: 'SAR', name: 'Suudi Arabistan Riyali', symbol: 'Ô∑º', flag: 'üá∏üá¶'),
    CurrencyModel(code: 'AED', name: 'Birle≈üik Arap Emirlikleri Dirhemi', symbol: 'ÿØ.ÿ•', flag: 'üá¶üá™'),
  ];

  static CurrencyModel getCurrencyByCode(String code) {
    return currencies.firstWhere(
      (currency) => currency.code == code,
      orElse: () => currencies.first, // Varsayƒ±lan olarak TRY d√∂nd√ºr
    );
  }

  static String getCurrencyName(String code) {
    return getCurrencyByCode(code).name;
  }

  static String getCurrencySymbol(String code) {
    return getCurrencyByCode(code).symbol;
  }

  static String getCurrencyFlag(String code) {
    return getCurrencyByCode(code).flag;
  }
}

class CurrencyModel {
  final String code;
  final String name;
  final String symbol;
  final String flag;

  const CurrencyModel({required this.code, required this.name, required this.symbol, required this.flag});
}
